{"ast":null,"code":"import _slicedToArray from \"/Users/ikhowaja/Desktop/react-frontend-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ikhowaja/Desktop/react-frontend-boilerplate/src/contexts/common/LoginContext.js\";\n\n/***\n *  Created by Sanchit Dang\n ***/\nimport React, { createContext, useState, useEffect } from 'react';\n/**\n * @AccessToken \n * @LoginStatus \n * @DevMode \n * \n * can be used by VanilaJS to check respective status \n */\n\nexport var AccessToken = localStorage.getItem('accessToken');\nexport var LoginStatus = localStorage.getItem('loginStatus');\nexport var DevMode = localStorage.getItem('devMode');\nexport const LoginContext = createContext();\nexport const LoginProvider = props => {\n  const children = props.children;\n\n  const _useState = useState(DevMode !== '' ? DevMode : false),\n        _useState2 = _slicedToArray(_useState, 2),\n        devMode = _useState2[0],\n        _setDevMode = _useState2[1];\n\n  const _useState3 = useState(LoginStatus),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loginStatus = _useState4[0],\n        _setLoginStatus = _useState4[1];\n\n  const _useState5 = useState(AccessToken),\n        _useState6 = _slicedToArray(_useState5, 2),\n        accessToken = _useState6[0],\n        _setAccessToken = _useState6[1];\n  /**\n  * Functions \n  * \n  * setLoginStatus()\n  * setDevMode()\n  * setAccessToken() \n  * \n  * are wrapperfunctions which changes respective values in localStorage, Context and VanilaJS Global Variables \n  */\n\n\n  const setLoginStatus = data => {\n    window.localStorage.setItem('loginStatus', data);\n    LoginStatus = data;\n\n    _setLoginStatus(data);\n  };\n\n  const setDevMode = data => {\n    window.localStorage.setItem('devMode', data);\n    DevMode = data;\n\n    _setDevMode(data);\n  };\n\n  const setAccessToken = data => {\n    AccessToken = data;\n    window.localStorage.setItem('accessToken', data);\n\n    _setAccessToken(data);\n  };\n\n  useEffect(() => {\n    if (accessToken) {\n      setLoginStatus(true);\n      setAccessToken(accessToken);\n    }\n  }, [accessToken]);\n  useEffect(() => {\n    if (!loginStatus) setAccessToken('');\n  }, [loginStatus]);\n  useEffect(() => {\n    if (DevMode !== \"true\") _setDevMode(false);\n  }, []);\n  useEffect(() => {\n    if (!accessToken) setLoginStatus(false);\n  }, [devMode, accessToken]);\n  return React.createElement(LoginContext.Provider, {\n    value: {\n      loginStatus,\n      accessToken,\n      devMode,\n      setAccessToken,\n      setLoginStatus,\n      setDevMode\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/ikhowaja/Desktop/react-frontend-boilerplate/src/contexts/common/LoginContext.js"],"names":["React","createContext","useState","useEffect","AccessToken","localStorage","getItem","LoginStatus","DevMode","LoginContext","LoginProvider","props","children","devMode","_setDevMode","loginStatus","_setLoginStatus","accessToken","_setAccessToken","setLoginStatus","data","window","setItem","setDevMode","setAccessToken"],"mappings":";;;AAAA;;;AAGA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA;;;;;;;;AAQA,OAAO,IAAIC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAlB;AACP,OAAO,IAAIC,WAAW,GAAGF,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAlB;AACP,OAAO,IAAIE,OAAO,GAAGH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAd;AAEP,OAAO,MAAMG,YAAY,GAAGR,aAAa,EAAlC;AACP,OAAO,MAAMS,aAAa,GAAGC,KAAK,IAAI;AAAA,QAC5BC,QAD4B,GACfD,KADe,CAC5BC,QAD4B;;AAAA,oBAELV,QAAQ,CAAEM,OAAO,KAAK,EAAZ,GAAiBA,OAAjB,GAA2B,KAA7B,CAFH;AAAA;AAAA,QAE7BK,OAF6B;AAAA,QAEpBC,WAFoB;;AAAA,qBAGGZ,QAAQ,CAACK,WAAD,CAHX;AAAA;AAAA,QAG7BQ,WAH6B;AAAA,QAGhBC,eAHgB;;AAAA,qBAIGd,QAAQ,CAACE,WAAD,CAJX;AAAA;AAAA,QAI7Ba,WAJ6B;AAAA,QAIhBC,eAJgB;AAMpC;;;;;;;;;;;AAUA,QAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/BC,IAAAA,MAAM,CAAChB,YAAP,CAAoBiB,OAApB,CAA4B,aAA5B,EAA2CF,IAA3C;AACAb,IAAAA,WAAW,GAAGa,IAAd;;AACAJ,IAAAA,eAAe,CAACI,IAAD,CAAf;AACD,GAJD;;AAKA,QAAMG,UAAU,GAAIH,IAAD,IAAU;AAC3BC,IAAAA,MAAM,CAAChB,YAAP,CAAoBiB,OAApB,CAA4B,SAA5B,EAAuCF,IAAvC;AACAZ,IAAAA,OAAO,GAAGY,IAAV;;AACAN,IAAAA,WAAW,CAACM,IAAD,CAAX;AACD,GAJD;;AAKA,QAAMI,cAAc,GAAIJ,IAAD,IAAU;AAC/BhB,IAAAA,WAAW,GAAGgB,IAAd;AACAC,IAAAA,MAAM,CAAChB,YAAP,CAAoBiB,OAApB,CAA4B,aAA5B,EAA2CF,IAA3C;;AACAF,IAAAA,eAAe,CAACE,IAAD,CAAf;AACD,GAJD;;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,WAAJ,EAAiB;AACfE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAK,MAAAA,cAAc,CAACP,WAAD,CAAd;AACD;AACF,GALQ,EAKN,CAACA,WAAD,CALM,CAAT;AAMAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACY,WAAL,EACES,cAAc,CAAC,EAAD,CAAd;AACH,GAHQ,EAGN,CAACT,WAAD,CAHM,CAAT;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,OAAO,KAAK,MAAhB,EACEM,WAAW,CAAC,KAAD,CAAX;AACH,GAHQ,EAGN,EAHM,CAAT;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACc,WAAL,EACEE,cAAc,CAAC,KAAD,CAAd;AACH,GAHQ,EAGN,CAACN,OAAD,EAAUI,WAAV,CAHM,CAAT;AAIA,SAAQ,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEF,MAAAA,WAAF;AAAeE,MAAAA,WAAf;AAA4BJ,MAAAA,OAA5B;AAAqCW,MAAAA,cAArC;AAAqDL,MAAAA,cAArD;AAAqEI,MAAAA;AAArE,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkHX,QAAlH,CAAR;AACD,CAlDM","sourcesContent":["/***\n *  Created by Sanchit Dang\n ***/\nimport React, { createContext, useState, useEffect } from 'react';\n\n/**\n * @AccessToken \n * @LoginStatus \n * @DevMode \n * \n * can be used by VanilaJS to check respective status \n */\n\nexport var AccessToken = localStorage.getItem('accessToken');\nexport var LoginStatus = localStorage.getItem('loginStatus');\nexport var DevMode = localStorage.getItem('devMode');\n\nexport const LoginContext = createContext();\nexport const LoginProvider = props => {\n  const { children } = props;\n  const [devMode, _setDevMode] = useState((DevMode !== '' ? DevMode : false));\n  const [loginStatus, _setLoginStatus] = useState(LoginStatus);\n  const [accessToken, _setAccessToken] = useState(AccessToken);\n\n  /**\n  * Functions \n  * \n  * setLoginStatus()\n  * setDevMode()\n  * setAccessToken() \n  * \n  * are wrapperfunctions which changes respective values in localStorage, Context and VanilaJS Global Variables \n  */\n\n  const setLoginStatus = (data) => {\n    window.localStorage.setItem('loginStatus', data);\n    LoginStatus = data;\n    _setLoginStatus(data);\n  };\n  const setDevMode = (data) => {\n    window.localStorage.setItem('devMode', data);\n    DevMode = data;\n    _setDevMode(data);\n  };\n  const setAccessToken = (data) => {\n    AccessToken = data;\n    window.localStorage.setItem('accessToken', data);\n    _setAccessToken(data);\n  };\n  useEffect(() => {\n    if (accessToken) {\n      setLoginStatus(true);\n      setAccessToken(accessToken)\n    }\n  }, [accessToken]);\n  useEffect(() => {\n    if (!loginStatus)\n      setAccessToken('')\n  }, [loginStatus]);\n  useEffect(() => {\n    if (DevMode !== \"true\")\n      _setDevMode(false)\n  }, []);\n  useEffect(() => {\n    if (!accessToken)\n      setLoginStatus(false)\n  }, [devMode, accessToken])\n  return (<LoginContext.Provider value={{ loginStatus, accessToken, devMode, setAccessToken, setLoginStatus, setDevMode }}>{children}</LoginContext.Provider>)\n}\n"]},"metadata":{},"sourceType":"module"}