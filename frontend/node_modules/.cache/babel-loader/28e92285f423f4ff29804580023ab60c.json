{"ast":null,"code":"import _slicedToArray from \"/Users/ikhowaja/Desktop/deakin-economy/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ikhowaja/Desktop/deakin-economy/frontend/src/views/common/Login/Login.js\";\n\n/***\n *  Created by Sanchit Dang\n ***/\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TextField, Paper, makeStyles, Typography, Button, Box, Grid } from '@material-ui/core';\nimport { LoginContext } from 'contexts';\nimport { notify } from 'components';\nimport { DevModeConfig } from 'configurations';\nimport { API } from 'helpers';\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.dark\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(4)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  loginBox: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(10)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  buttons: {\n    marginTop: theme.spacing(1)\n  },\n  developMessage: {\n    position: \"absolute\",\n    bottom: \"2vh\"\n  }\n}));\nexport const Login = () => {\n  const classes = useStyles();\n\n  const _useState = useState('Login'),\n        _useState2 = _slicedToArray(_useState, 1),\n        pageHeading = _useState2[0];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        emailId = _useState4[0],\n        setEmailId = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        password = _useState6[0],\n        setPassword = _useState6[1];\n\n  const _useContext = useContext(LoginContext),\n        devMode = _useContext.devMode,\n        loginStatus = _useContext.loginStatus,\n        setLoginStatus = _useContext.setLoginStatus;\n\n  const performLogin = () => {\n    let details = {\n      username: devMode ? DevModeConfig.devDetails !== undefined ? DevModeConfig.devDetails.user : '' : emailId,\n      password: devMode ? DevModeConfig.devDetails !== undefined ? DevModeConfig.devDetails.password : '' : password\n    };\n    API.login(details, setLoginStatus);\n  };\n\n  const validationCheck = () => {\n    if (devMode) {\n      return performLogin();\n    }\n\n    if (!loginStatus) {\n      const email = emailId;\n      const pwd = password;\n      let emailPattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      let emailPatternTest = emailPattern.test(email);\n\n      if (emailPatternTest && pwd) {\n        performLogin();\n        return true;\n      } else if (emailPatternTest === undefined && pwd === undefined) {\n        notify('Email or password must not be empty!');\n        return false;\n      } else if (!emailPatternTest) {\n        notify('Email must not be empty!');\n        return false;\n      } else if (!emailPatternTest && email.length > 0) {\n        notify('Invalid email!');\n        return false;\n      } else if (!pwd) {\n        notify('Password must not be empty!');\n        return false;\n      }\n    }\n  };\n\n  let content = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.loginBox,\n    item: true,\n    xs: 10,\n    lg: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, pageHeading), React.createElement(\"form\", {\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    onChange: e => setEmailId(e.target.value),\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    onChange: e => setPassword(e.target.value),\n    autoComplete: \"current-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.buttons,\n    onClick: validationCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Login\"), React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.buttons,\n    component: Link,\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Sign Up\")))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.developMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Box, {\n    mt: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Developed by Deakin Launchpad\")))));\n  return content;\n};","map":{"version":3,"sources":["/Users/ikhowaja/Desktop/deakin-economy/frontend/src/views/common/Login/Login.js"],"names":["React","useState","useContext","Link","TextField","Paper","makeStyles","Typography","Button","Box","Grid","LoginContext","notify","DevModeConfig","API","useStyles","theme","body","backgroundColor","palette","common","dark","paper","marginTop","spacing","display","flexDirection","alignItems","padding","avatar","margin","secondary","main","loginBox","width","submit","buttons","developMessage","position","bottom","Login","classes","pageHeading","emailId","setEmailId","password","setPassword","devMode","loginStatus","setLoginStatus","performLogin","details","username","devDetails","undefined","user","login","validationCheck","email","pwd","emailPattern","emailPatternTest","test","length","content","e","target","value"],"mappings":"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","sourcesContent":["/***\n *  Created by Sanchit Dang\n ***/\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TextField, Paper, makeStyles, Typography, Button, Box, Grid } from '@material-ui/core';\nimport { LoginContext } from 'contexts';\nimport { notify } from 'components';\nimport { DevModeConfig } from 'configurations';\nimport { API } from 'helpers';\n\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.dark,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(4)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  loginBox: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(10)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttons: {\n    marginTop: theme.spacing(1)\n  },\n  developMessage: {\n    position: \"absolute\",\n    bottom: \"2vh\"\n  }\n}));\n\nexport const Login = () => {\n  const classes = useStyles();\n  const [pageHeading] = useState('Login');\n  const [emailId, setEmailId] = useState('');\n  const [password, setPassword] = useState('');\n  const { devMode, loginStatus, setLoginStatus } = useContext(LoginContext);\n  const performLogin = () => {\n    let details = {\n      username: (devMode ? (DevModeConfig.devDetails !== undefined ? DevModeConfig.devDetails.user : '') : emailId),\n      password: (devMode ? (DevModeConfig.devDetails !== undefined ? DevModeConfig.devDetails.password : '') : password)\n    }\n    API.login(details, setLoginStatus)\n  }\n\n  const validationCheck = () => {\n    if (devMode) {\n      return performLogin()\n    }\n    if (!loginStatus) {\n      const email = emailId;\n      const pwd = password;\n      let emailPattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      let emailPatternTest = emailPattern.test(email);\n      if (emailPatternTest && pwd) {\n        performLogin()\n        return true;\n      } else if (emailPatternTest === undefined && pwd === undefined) {\n        notify('Email or password must not be empty!');\n        return false;\n      } else if (!emailPatternTest) {\n        notify('Email must not be empty!');\n        return false;\n      } else if (!emailPatternTest && email.length > 0) {\n        notify('Invalid email!');\n        return false;\n      } else if (!pwd) {\n        notify('Password must not be empty!');\n        return false;\n      }\n    }\n  }\n\n  let content = (\n    <div>\n      <Grid container spacing={0} justify=\"center\">\n        <Grid className={classes.loginBox} item xs={10} lg={2}>\n          <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h5\">\n              {pageHeading}\n            </Typography>\n            <form noValidate>\n              <TextField variant=\"outlined\" margin=\"normal\" required fullWidth id=\"email\" label=\"Email Address\" name=\"email\" autoComplete=\"email\" onChange={e => setEmailId(e.target.value)} autoFocus />\n              <TextField variant=\"outlined\" margin=\"normal\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)} autoComplete=\"current-password\" />\n              <Button fullWidth variant=\"contained\" color=\"primary\" className={classes.buttons} onClick={validationCheck}>Login</Button>\n              <Button fullWidth variant=\"contained\" color=\"primary\" className={classes.buttons} component={Link} to='/register'>Sign Up</Button>\n            </form>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} className={classes.developMessage}>\n          <Box mt={5}>\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n              Developed by Deakin Launchpad\n        </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </div >\n  );\n  return content;\n}\n"]},"metadata":{},"sourceType":"module"}